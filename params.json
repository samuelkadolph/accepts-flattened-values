{"name":"accepts-flattened-values","body":"# accepts-flattened-values\r\n\r\naccepts-flattened-values is an ActiveRecord mixin to flatten a `has_many` or `has_and_belongs_to_many` assocation.\r\n\r\n## Description\r\n\r\naccepts-flattened-values is a mixin for ActiveRecord to be used on any model with a `has_many` or `has_and_belongs_to_many`\r\nassociation. The purpose of this mixin is to simplify a tag like association for any model or association.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem \"accepts-flattened-values\"\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install accepts-flattened-values\r\n\r\n## Usage\r\n\r\n```ruby\r\nrequire \"accepts-flattened-values\"\r\n\r\ncreate_table(:users) { |t| t.string :name }\r\ncreate_table(:interests) { |t| t.string :value }\r\ncreate_table(:interests_users, id: false) do |t|\r\n  t.references :interest\r\n  t.references :user\r\nend\r\n\r\nclass Interest < ActiveRecord::Base\r\n  attr_accessible :value\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  include AcceptsFlattenedValues\r\n\r\n  attr_accessible :name\r\n\r\n  has_and_belongs_to_many :interests\r\n  accepts_flattened_values_for :interests\r\nend\r\n\r\nuser = User.create!(name: \"Sam\")\r\nuser.interests.create!(value: \"ruby\")\r\nuser.interests.create!(value: \"ruby on rails\")\r\nuser.interests.create!(value: \"starcraft\")\r\nuser.interests_values # => \"ruby,ruby on rails,starcraft\"\r\n\r\nuser.interests_values = \"ruby,battlefield\"\r\nuser.interests # => [#<Interest value: \"ruby\">, #<Interest value: \"battlefield\">]\r\n\r\n<%= form_for @user do |f| %>\r\n  <%= f.label :interests_values %>:\r\n  <%= f.text_field :interests_values %>\r\n<% end %>\r\n```\r\n\r\n## Contributing\r\n\r\nFork, branch & pull request.\r\n","tagline":"","google":"UA-32629715-1","note":"Don't delete this file! It's used internally to help with page regeneration."}